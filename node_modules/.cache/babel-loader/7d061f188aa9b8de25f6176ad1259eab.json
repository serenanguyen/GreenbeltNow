{"ast":null,"code":"import _slicedToArray from \"/Users/serena.nguyen/Sites-1/GreenbeltNow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js\";\nimport React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\nexport default (() => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // passing empty array as second arg treats this similarly to componentDidMount\n\n\n  useEffect(() => {\n    weather.setLang('en');\n    weather.setCity('Austin');\n    weather.setUnits('imperial'); // check http://openweathermap.org/appid#get for get the APPID\n\n    weather.setAPPID('42ebbe7c726c3fc801edf7558521481b');\n    weather.getAllWeather(function (err, res) {\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      });\n    });\n  }, []);\n  const imgUrl = data && \"http://openweathermap.org/img/wn/\".concat(data.img, \"@2x.png\");\n  return React.createElement(\"div\", {\n    className: \"weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"Current Weather in Austin, TX\"), React.createElement(\"div\", {\n    className: \"weather-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    className: \"weather-icon\",\n    alt: \"weather-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, data && data.temp, \" F\")));\n});","map":{"version":3,"sources":["/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js"],"names":["React","useEffect","useState","weather","data","setData","setLang","setCity","setUnits","setAPPID","getAllWeather","err","res","temp","main","condition","description","img","icon","imgUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AAEA,gBAAe,MAAM;AAAA,oBACKD,QAAQ,EADb;AAAA;AAAA,QACZE,IADY;AAAA,QACNC,OADM,kBAEnB;;;AACAJ,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAACG,OAAR,CAAgB,IAAhB;AACAH,IAAAA,OAAO,CAACI,OAAR,CAAgB,QAAhB;AACAJ,IAAAA,OAAO,CAACK,QAAR,CAAiB,UAAjB,EAHc,CAKd;;AACAL,IAAAA,OAAO,CAACM,QAAR,CAAiB,kCAAjB;AAEAN,IAAAA,OAAO,CAACO,aAAR,CAAsB,UAASC,GAAT,EAAcC,GAAd,EAAkB;AACtCP,MAAAA,OAAO,CAAC;AACNQ,QAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASD,IADT;AAENE,QAAAA,SAAS,EAAEH,GAAG,CAACT,OAAJ,CAAY,CAAZ,EAAea,WAFpB;AAGNC,QAAAA,GAAG,EAAEL,GAAG,CAACT,OAAJ,CAAY,CAAZ,EAAee;AAHd,OAAD,CAAP;AAKD,KAND;AAOD,GAfQ,EAeN,EAfM,CAAT;AAiBA,QAAMC,MAAM,GAAGf,IAAI,+CAAwCA,IAAI,CAACa,GAA7C,YAAnB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,SAAS,EAAC,cAA5B;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIf,IAAI,IAAIA,IAAI,CAACS,IAAjB,OAFF,CAFF,CADF;AASD,CA/BD","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\n\nexport default () => {\n  const [data, setData] = useState();\n  // passing empty array as second arg treats this similarly to componentDidMount\n  useEffect(() => {\n    weather.setLang('en'); \n    weather.setCity('Austin');\n \t  weather.setUnits('imperial');\n \n    // check http://openweathermap.org/appid#get for get the APPID\n \t  weather.setAPPID('42ebbe7c726c3fc801edf7558521481b');\n\n    weather.getAllWeather(function(err, res){\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      })\n    });\n  }, []);\n\n  const imgUrl = data && `http://openweathermap.org/img/wn/${data.img}@2x.png`\n\n  return (\n    <div className=\"weather\">\n      <h2>Current Weather in Austin, TX</h2>\n      <div className=\"weather-info\">\n        <img src={imgUrl} className=\"weather-icon\" alt=\"weather-icon\" />\n        <p>{data && data.temp} F</p>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}