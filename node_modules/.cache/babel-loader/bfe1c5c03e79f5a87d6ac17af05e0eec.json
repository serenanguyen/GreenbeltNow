{"ast":null,"code":"import _slicedToArray from \"/Users/serena.nguyen/Sites-1/GreenbeltNow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/serena.nguyen/Sites-1/GreenbeltNow/src/Store.js\";\nimport React, { useState } from \"react\";\nexport const LoadingContext = React.createContext();\nexport const ResultsContext = React.createContext();\n\nconst Store = ({\n  children\n}) => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isLoading = _useState2[0],\n        setIsLoading = _useState2[1];\n\n  const _useState3 = useState(),\n        _useState4 = _slicedToArray(_useState3, 2),\n        results = _useState4[0],\n        setResults = _useState4[1];\n\n  return React.createElement(LoadingContext.Provider, {\n    value: {\n      state: isLoading,\n      setState: setIsLoading\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, React.createElement(ResultsContext.Provider, {\n    value: {\n      state: results,\n      setState: setResults\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, children));\n};\n\nexport default Store;","map":{"version":3,"sources":["/Users/serena.nguyen/Sites-1/GreenbeltNow/src/Store.js"],"names":["React","useState","LoadingContext","createContext","ResultsContext","Store","children","isLoading","setIsLoading","results","setResults","state","setState"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAO,MAAMC,cAAc,GAAGF,KAAK,CAACG,aAAN,EAAvB;AACP,OAAO,MAAMC,cAAc,GAAGJ,KAAK,CAACG,aAAN,EAAvB;;AAEP,MAAME,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA,oBACIL,QAAQ,CAAC,KAAD,CADZ;AAAA;AAAA,QACvBM,SADuB;AAAA,QACZC,YADY;;AAAA,qBAEAP,QAAQ,EAFR;AAAA;AAAA,QAEvBQ,OAFuB;AAAA,QAEdC,UAFc;;AAG9B,SACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACC,MAAAA,KAAK,EAACJ,SAAP;AAAkBK,MAAAA,QAAQ,EAACJ;AAA3B,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,cAAD,CAAgB,QAAhB;AAAyB,IAAA,KAAK,EAAE;AAACG,MAAAA,KAAK,EAACF,OAAP;AAAgBG,MAAAA,QAAQ,EAACF;AAAzB,KAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,QADH,CADF,CADF;AAOD,CAVD;;AAYA,eAAeD,KAAf","sourcesContent":["import React, { useState } from \"react\";\n\nexport const LoadingContext = React.createContext();\nexport const ResultsContext = React.createContext();\n\nconst Store = ({ children }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [results, setResults] = useState();\n  return (\n    <LoadingContext.Provider value={{state:isLoading, setState:setIsLoading}}>\n      <ResultsContext.Provider value={{state:results, setState:setResults}}>\n        {children}\n      </ResultsContext.Provider>\n    </LoadingContext.Provider>\n  );\n};\n\nexport default Store;\n"]},"metadata":{},"sourceType":"module"}