{"ast":null,"code":"import _slicedToArray from \"/Users/serena.nguyen/Sites-1/GreenbeltNow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js\";\nimport React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\n\nconst Weather = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // passing empty array as second arg treats this similarly to componentDidMount\n\n\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/weather\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n\n    return body;\n  };\n\n  useEffect(() => {\n    callBackendAPI().then(res => console.log(res.response)).catch(err => console.log(err));\n    weather.setLang(\"en\");\n    weather.setCity(\"Austin\");\n    weather.setUnits(\"imperial\");\n    weather.setAPPID(\"42ebbe7c726c3fc801edf7558521481b\");\n    weather.getAllWeather(function (err, res) {\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      });\n    });\n  }, []);\n  const imgUrl = data && \"http://openweathermap.org/img/wn/\".concat(data.img, \"@2x.png\");\n  return React.createElement(\"div\", {\n    className: \"weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Current Weather in Austin, TX\"), React.createElement(\"div\", {\n    className: \"weather-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    className: \"weather-icon\",\n    alt: \"weather-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, data && data.temp, \" F\")));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js"],"names":["React","useEffect","useState","weather","Weather","data","setData","callBackendAPI","response","fetch","body","json","status","Error","message","then","res","console","log","catch","err","setLang","setCity","setUnits","setAPPID","getAllWeather","temp","main","condition","description","img","icon","imgUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACIF,QAAQ,EADZ;AAAA;AAAA,QACbG,IADa;AAAA,QACPC,OADO,kBAEpB;;;AAEA,QAAMC,cAAc,GAAG,YAAY;AACjC,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,UAAD,CAA5B;AACA,UAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AAEA,QAAIH,QAAQ,CAACI,MAAT,KAAoB,GAAxB,EAA6B;AAC3B,YAAMC,KAAK,CAACH,IAAI,CAACI,OAAN,CAAX;AACD;;AACD,WAAOJ,IAAP;AACD,GARD;;AAUAT,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,cAAc,GACXQ,IADH,CACQC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACR,QAAhB,CADf,EAEGW,KAFH,CAESC,GAAG,IAAIH,OAAO,CAACC,GAAR,CAAYE,GAAZ,CAFhB;AAIAjB,IAAAA,OAAO,CAACkB,OAAR,CAAgB,IAAhB;AACAlB,IAAAA,OAAO,CAACmB,OAAR,CAAgB,QAAhB;AACAnB,IAAAA,OAAO,CAACoB,QAAR,CAAiB,UAAjB;AACApB,IAAAA,OAAO,CAACqB,QAAR,CAAiB,kCAAjB;AAEArB,IAAAA,OAAO,CAACsB,aAAR,CAAsB,UAASL,GAAT,EAAcJ,GAAd,EAAmB;AACvCV,MAAAA,OAAO,CAAC;AACNoB,QAAAA,IAAI,EAAEV,GAAG,CAACW,IAAJ,CAASD,IADT;AAENE,QAAAA,SAAS,EAAEZ,GAAG,CAACb,OAAJ,CAAY,CAAZ,EAAe0B,WAFpB;AAGNC,QAAAA,GAAG,EAAEd,GAAG,CAACb,OAAJ,CAAY,CAAZ,EAAe4B;AAHd,OAAD,CAAP;AAKD,KAND;AAOD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMC,MAAM,GAAG3B,IAAI,+CAAwCA,IAAI,CAACyB,GAA7C,YAAnB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEE,MAAV;AAAkB,IAAA,SAAS,EAAC,cAA5B;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAI3B,IAAI,IAAIA,IAAI,CAACqB,IAAjB,OAFF,CAFF,CADF;AASD,CA5CD;;AA8CA,eAAetB,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\n\nconst Weather = () => {\n  const [data, setData] = useState();\n  // passing empty array as second arg treats this similarly to componentDidMount\n\n  const callBackendAPI = async () => {\n    const response = await fetch(\"/weather\");\n    const body = await response.json();\n\n    if (response.status !== 200) {\n      throw Error(body.message);\n    }\n    return body;\n  };\n\n  useEffect(() => {\n    callBackendAPI()\n      .then(res => console.log(res.response))\n      .catch(err => console.log(err));\n\n    weather.setLang(\"en\");\n    weather.setCity(\"Austin\");\n    weather.setUnits(\"imperial\");\n    weather.setAPPID(\"42ebbe7c726c3fc801edf7558521481b\");\n\n    weather.getAllWeather(function(err, res) {\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      });\n    });\n  }, []);\n\n  const imgUrl = data && `http://openweathermap.org/img/wn/${data.img}@2x.png`;\n\n  return (\n    <div className=\"weather\">\n      <h2>Current Weather in Austin, TX</h2>\n      <div className=\"weather-info\">\n        <img src={imgUrl} className=\"weather-icon\" alt=\"weather-icon\" />\n        <p>{data && data.temp} F</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}