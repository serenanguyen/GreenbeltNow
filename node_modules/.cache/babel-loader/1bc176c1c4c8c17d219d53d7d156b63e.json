{"ast":null,"code":"import _slicedToArray from \"/Users/serena.nguyen/Sites-1/GreenbeltNow/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js\";\nimport React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\nimport request from \"request\";\n\nconst Weather = () => {\n  const _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        data = _useState2[0],\n        setData = _useState2[1]; // passing empty array as second arg treats this similarly to componentDidMount\n\n\n  useEffect(() => {\n    weather.setLang(\"en\");\n    weather.setCity(\"Austin\");\n    weather.setUnits(\"imperial\");\n    weather.setAPPID(\"42ebbe7c726c3fc801edf7558521481b\");\n    weather.getAllWeather(function (err, res) {\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      });\n    });\n    request('http://stackabuse.com', function (err, res, body) {\n      console.log(body);\n    });\n  }, []);\n  const imgUrl = data && \"http://openweathermap.org/img/wn/\".concat(data.img, \"@2x.png\");\n  return React.createElement(\"div\", {\n    className: \"weather\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, \"Current Weather in Austin, TX\"), React.createElement(\"div\", {\n    className: \"weather-info\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: imgUrl,\n    className: \"weather-icon\",\n    alt: \"weather-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, data && data.temp, \" F\")));\n};\n\nexport default Weather;","map":{"version":3,"sources":["/Users/serena.nguyen/Sites-1/GreenbeltNow/src/components/Weather.js"],"names":["React","useEffect","useState","weather","request","Weather","data","setData","setLang","setCity","setUnits","setAPPID","getAllWeather","err","res","temp","main","condition","description","img","icon","body","console","log","imgUrl"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,OAAP,MAAoB,kBAApB;AACA,OAAOC,OAAP,MAAoB,SAApB;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA,oBACIH,QAAQ,EADZ;AAAA;AAAA,QACbI,IADa;AAAA,QACPC,OADO,kBAEpB;;;AACAN,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,OAAO,CAACK,OAAR,CAAgB,IAAhB;AACAL,IAAAA,OAAO,CAACM,OAAR,CAAgB,QAAhB;AACAN,IAAAA,OAAO,CAACO,QAAR,CAAiB,UAAjB;AACAP,IAAAA,OAAO,CAACQ,QAAR,CAAiB,kCAAjB;AAEAR,IAAAA,OAAO,CAACS,aAAR,CAAsB,UAASC,GAAT,EAAcC,GAAd,EAAmB;AACvCP,MAAAA,OAAO,CAAC;AACNQ,QAAAA,IAAI,EAAED,GAAG,CAACE,IAAJ,CAASD,IADT;AAENE,QAAAA,SAAS,EAAEH,GAAG,CAACX,OAAJ,CAAY,CAAZ,EAAee,WAFpB;AAGNC,QAAAA,GAAG,EAAEL,GAAG,CAACX,OAAJ,CAAY,CAAZ,EAAeiB;AAHd,OAAD,CAAP;AAKD,KAND;AAQAhB,IAAAA,OAAO,CAAC,uBAAD,EAA0B,UAASS,GAAT,EAAcC,GAAd,EAAmBO,IAAnB,EAAyB;AACxDC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACH,KAFQ,CAAP;AAGD,GAjBQ,EAiBN,EAjBM,CAAT;AAmBA,QAAMG,MAAM,GAAGlB,IAAI,+CAAwCA,IAAI,CAACa,GAA7C,YAAnB;AAEA,SACE;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAEE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,GAAG,EAAEK,MAAV;AAAkB,IAAA,SAAS,EAAC,cAA5B;AAA2C,IAAA,GAAG,EAAC,cAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIlB,IAAI,IAAIA,IAAI,CAACS,IAAjB,OAFF,CAFF,CADF;AASD,CAjCD;;AAmCA,eAAeV,OAAf","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport weather from \"openweather-apis\";\nimport request from \"request\";\n\nconst Weather = () => {\n  const [data, setData] = useState();\n  // passing empty array as second arg treats this similarly to componentDidMount\n  useEffect(() => {\n    weather.setLang(\"en\");\n    weather.setCity(\"Austin\");\n    weather.setUnits(\"imperial\");\n    weather.setAPPID(\"42ebbe7c726c3fc801edf7558521481b\");\n\n    weather.getAllWeather(function(err, res) {\n      setData({\n        temp: res.main.temp,\n        condition: res.weather[0].description,\n        img: res.weather[0].icon\n      });\n    });\n\n    request('http://stackabuse.com', function(err, res, body) {  \n      console.log(body);\n  });\n  }, []);\n\n  const imgUrl = data && `http://openweathermap.org/img/wn/${data.img}@2x.png`;\n\n  return (\n    <div className=\"weather\">\n      <h2>Current Weather in Austin, TX</h2>\n      <div className=\"weather-info\">\n        <img src={imgUrl} className=\"weather-icon\" alt=\"weather-icon\" />\n        <p>{data && data.temp} F</p>\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n"]},"metadata":{},"sourceType":"module"}